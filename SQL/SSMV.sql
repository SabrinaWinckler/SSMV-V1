-- MySQL Script generated by MySQL Workbench
-- Fri Jun  9 21:59:00 2017
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema ssmv
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema ssmv
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `ssmv` DEFAULT CHARACTER SET utf8 ;
USE `ssmv` ;

-- -----------------------------------------------------
-- Table `ssmv`.`tipoSangue`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ssmv`.`tipoSangue` (
  `idtipoSangue` INT NOT NULL AUTO_INCREMENT,
  `tipo` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idtipoSangue`),
  UNIQUE INDEX `tipo_UNIQUE` (`tipo` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ssmv`.`estados`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ssmv`.`estados` (
  `idestado` INT NOT NULL AUTO_INCREMENT,
  `sigla` CHAR(2) NOT NULL,
  `nome` VARCHAR(30) NOT NULL,
  PRIMARY KEY (`idestado`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ssmv`.`usuarios`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ssmv`.`usuarios` (
  `idusuario` INT NOT NULL AUTO_INCREMENT,
  `email` VARCHAR(60) NOT NULL,
  `senha` VARCHAR(45) NOT NULL,
  `tipo` CHAR(2) NOT NULL,
  `idfacebook` BIGINT NULL,
  PRIMARY KEY (`idusuario`),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC),
  UNIQUE INDEX `idfacebook_UNIQUE` (`idfacebook` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ssmv`.`pf`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ssmv`.`pf` (
  `idusuario` INT NOT NULL,
  `nome` VARCHAR(45) NOT NULL,
  `sobrenome` VARCHAR(90) NOT NULL,
  `dataNascimento` DATE NOT NULL,
  `cpf` VARCHAR(11) NOT NULL,
  `genero` CHAR(1) NOT NULL,
  `idestado` INT NOT NULL,
  `municipio` VARCHAR(70) NOT NULL,
  `telefoneF` VARCHAR(10) NOT NULL,
  `telefoneC` VARCHAR(11) NOT NULL,
  `idtipoSangue` INT NOT NULL,
  `peso` FLOAT(5) NOT NULL,
  `ultimaDoacao` DATE NOT NULL DEFAULT '1901-01-01',
  `foto` LONGBLOB NULL,
  INDEX `idtipoSanguineo_idx` (`idtipoSangue` ASC),
  INDEX `fk_pf_estado_idx` (`idestado` ASC),
  UNIQUE INDEX `cpf_UNIQUE` (`cpf` ASC),
  UNIQUE INDEX `idusuario_UNIQUE` (`idusuario` ASC),
  CONSTRAINT `fk_pf_tipoSangue`
    FOREIGN KEY (`idtipoSangue`)
    REFERENCES `ssmv`.`tipoSangue` (`idtipoSangue`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_pf_estado`
    FOREIGN KEY (`idestado`)
    REFERENCES `ssmv`.`estados` (`idestado`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_pf_usuario`
    FOREIGN KEY (`idusuario`)
    REFERENCES `ssmv`.`usuarios` (`idusuario`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ssmv`.`questionario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ssmv`.`questionario` (
  `idusuario` INT NOT NULL,
  `resp1` TINYINT NOT NULL,
  `resp2` TINYINT NOT NULL,
  `resp3` TINYINT NOT NULL,
  `resp4` TINYINT NOT NULL,
  `resp5` TINYINT NOT NULL,
  `resp6` TINYINT NOT NULL,
  `resp7` TINYINT NOT NULL,
  `resp8` TINYINT NOT NULL,
  `resp9` TINYINT NOT NULL,
  `resp10` TINYINT NOT NULL,
  `resp11` TINYINT NOT NULL,
  `resp12` TINYINT NOT NULL,
  `resp13` TINYINT NOT NULL,
  `resp14` TINYINT NOT NULL,
  `resp15` TINYINT NOT NULL,
  `resp16` TINYINT NOT NULL,
  `resp17` TINYINT NOT NULL,
  INDEX `fk_questionario_usuarios_idx` (`idusuario` ASC),
  CONSTRAINT `fk_questionario_usuarios`
    FOREIGN KEY (`idusuario`)
    REFERENCES `ssmv`.`usuarios` (`idusuario`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ssmv`.`pj`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ssmv`.`pj` (
  `idusuario` INT NOT NULL,
  `nomeEmpresarial` VARCHAR(90) NOT NULL,
  `nomeFantasia` VARCHAR(90) NULL,
  `cnpj` VARCHAR(14) NOT NULL,
  `logradouro` VARCHAR(45) NOT NULL,
  `numero` INT NOT NULL,
  `complemento` VARCHAR(45) NOT NULL,
  `cep` CHAR(8) NOT NULL,
  `bairro` VARCHAR(45) NOT NULL,
  `idestado` INT NOT NULL,
  `municipio` VARCHAR(45) NOT NULL,
  `telefoneF` VARCHAR(10) NOT NULL,
  `telefoneF2` VARCHAR(10) NOT NULL,
  `foto` LONGBLOB NULL,
  INDEX `fk_pj_estado_idx` (`idestado` ASC),
  UNIQUE INDEX `cnpj_UNIQUE` (`cnpj` ASC),
  INDEX `fk_pj_usuarios_idx` (`idusuario` ASC),
  CONSTRAINT `fk_pj_estado`
    FOREIGN KEY (`idestado`)
    REFERENCES `ssmv`.`estados` (`idestado`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_pj_usuarios`
    FOREIGN KEY (`idusuario`)
    REFERENCES `ssmv`.`usuarios` (`idusuario`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ssmv`.`notificacao`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ssmv`.`notificacao` (
  `idnotificacao` INT NOT NULL AUTO_INCREMENT,
  `de` INT NOT NULL,
  `para` INT NOT NULL,
  `mensagem` VARCHAR(140) NOT NULL,
  `data` DATE NOT NULL,
  `resposta` TINYINT NOT NULL DEFAULT 0,
  PRIMARY KEY (`idnotificacao`),
  INDEX `fk_notificacao_de_usuarios_idx` (`de` ASC),
  INDEX `fk_notificacao_para_usuarios_idx` (`para` ASC),
  CONSTRAINT `fk_notificacao_de_usuarios`
    FOREIGN KEY (`de`)
    REFERENCES `ssmv`.`usuarios` (`idusuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_notificacao_para_usuarios`
    FOREIGN KEY (`para`)
    REFERENCES `ssmv`.`usuarios` (`idusuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ssmv`.`requisicao`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ssmv`.`requisicao` (
  `idrequisicao` INT NOT NULL,
  `idusuario` INT NOT NULL,
  `nome` VARCHAR(45) NOT NULL,
  `tipoSangue` INT NOT NULL,
  `dataSolicitacao` DATE NOT NULL,
  `dataLimite` DATE NOT NULL,
  `urgencia` SMALLINT NOT NULL,
  `idnotificacao` INT NOT NULL,
  PRIMARY KEY (`idrequisicao`),
  INDEX `fk_requisicao_notificacao_idx` (`idnotificacao` ASC),
  INDEX `fk_requisicao_tipoSangue_idx` (`tipoSangue` ASC),
  INDEX `fk_requisicao_usuarios_idx` (`idusuario` ASC),
  CONSTRAINT `fk_requisicao_notificacao`
    FOREIGN KEY (`idnotificacao`)
    REFERENCES `ssmv`.`notificacao` (`idnotificacao`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_requisicao_tipoSangue`
    FOREIGN KEY (`tipoSangue`)
    REFERENCES `ssmv`.`tipoSangue` (`idtipoSangue`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_requisicao_usuarios`
    FOREIGN KEY (`idusuario`)
    REFERENCES `ssmv`.`usuarios` (`idusuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ssmv`.`cronograma`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ssmv`.`cronograma` (
  `idcronograma` INT NOT NULL AUTO_INCREMENT,
  `idusuario` INT NOT NULL,
  `dataInicial` DATE NOT NULL,
  `dataFinal` DATE NOT NULL,
  `horarioInicial` TIME NOT NULL,
  `horarioFinal` TIME NOT NULL,
  `horarioIntervaloInicial` TIME NULL,
  `horarioIntervaloFinal` TIME NULL,
  PRIMARY KEY (`idcronograma`),
  INDEX `fk_cronograma_usuarios_idx` (`idusuario` ASC),
  CONSTRAINT `fk_cronograma_usuarios`
    FOREIGN KEY (`idusuario`)
    REFERENCES `ssmv`.`usuarios` (`idusuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ssmv`.`agendamentos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ssmv`.`agendamentos` (
  `idagendamento` INT NOT NULL AUTO_INCREMENT,
  `idusuario_pf` INT NOT NULL,
  `idusuario_pj` INT NOT NULL,
  `idcronograma` INT NOT NULL,
  `idnotificacao` INT NOT NULL,
  PRIMARY KEY (`idagendamento`),
  INDEX `fk_agendamentos_usuarios_idx` (`idusuario_pf` ASC),
  INDEX `fk_agendamentos_cronograma_idx` (`idcronograma` ASC),
  INDEX `fk_agendamentos_notificacao_idx` (`idnotificacao` ASC),
  INDEX `fk_agendamentos_pj_usuarios_idx` (`idusuario_pj` ASC),
  CONSTRAINT `fk_agendamentos_pf_usuarios`
    FOREIGN KEY (`idusuario_pf`)
    REFERENCES `ssmv`.`usuarios` (`idusuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_agendamentos_cronograma`
    FOREIGN KEY (`idcronograma`)
    REFERENCES `ssmv`.`cronograma` (`idcronograma`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_agendamentos_notificacao`
    FOREIGN KEY (`idnotificacao`)
    REFERENCES `ssmv`.`notificacao` (`idnotificacao`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_agendamentos_pj_usuarios`
    FOREIGN KEY (`idusuario_pj`)
    REFERENCES `ssmv`.`usuarios` (`idusuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ssmv`.`sangueDoador`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ssmv`.`sangueDoador` (
  `idsangueDoador` INT NOT NULL,
  `idsangueCompativel` INT NOT NULL,
  INDEX `fk_sangueDoador_idsangueCompativel_tipoSangue_idx` (`idsangueCompativel` ASC),
  INDEX `fk_sangueDoador_idsangueDoador_tipoSangue_idx` (`idsangueDoador` ASC),
  CONSTRAINT `fk_sangueDoador_idsangueDoador_tipoSangue`
    FOREIGN KEY (`idsangueDoador`)
    REFERENCES `ssmv`.`tipoSangue` (`idtipoSangue`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_sangueDoador_idsangueCompativel_tipoSangue`
    FOREIGN KEY (`idsangueCompativel`)
    REFERENCES `ssmv`.`tipoSangue` (`idtipoSangue`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ssmv`.`sangueRecebedor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ssmv`.`sangueRecebedor` (
  `idsangueRecebedor` INT NOT NULL,
  `idsangueCompativel` INT NOT NULL,
  INDEX `fk_sangueRecebedor_idsangueCompativel_tipoSangue_idx` (`idsangueCompativel` ASC),
  INDEX `fk_sangueDoador_idsangueDoador_tipoSangue_idx` (`idsangueRecebedor` ASC),
  CONSTRAINT `fk_sangueRecebedor_idsangueRecebedor_tipoSangue`
    FOREIGN KEY (`idsangueRecebedor`)
    REFERENCES `ssmv`.`tipoSangue` (`idtipoSangue`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_sangueRecebedor_idsangueCompativel_tipoSangue`
    FOREIGN KEY (`idsangueCompativel`)
    REFERENCES `ssmv`.`tipoSangue` (`idtipoSangue`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ssmv`.`contato`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ssmv`.`contato` (
  `idcontato` INT NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(45) NOT NULL,
  `email` VARCHAR(60) NOT NULL,
  `assunto` TEXT NOT NULL,
  PRIMARY KEY (`idcontato`))
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `ssmv`.`tipoSangue`
-- -----------------------------------------------------
START TRANSACTION;
USE `ssmv`;
INSERT INTO `ssmv`.`tipoSangue` (`idtipoSangue`, `tipo`) VALUES (1, 'A+');
INSERT INTO `ssmv`.`tipoSangue` (`idtipoSangue`, `tipo`) VALUES (2, 'A-');
INSERT INTO `ssmv`.`tipoSangue` (`idtipoSangue`, `tipo`) VALUES (3, 'B+');
INSERT INTO `ssmv`.`tipoSangue` (`idtipoSangue`, `tipo`) VALUES (4, 'B-');
INSERT INTO `ssmv`.`tipoSangue` (`idtipoSangue`, `tipo`) VALUES (5, 'AB+');
INSERT INTO `ssmv`.`tipoSangue` (`idtipoSangue`, `tipo`) VALUES (6, 'AB-');
INSERT INTO `ssmv`.`tipoSangue` (`idtipoSangue`, `tipo`) VALUES (7, 'O+');
INSERT INTO `ssmv`.`tipoSangue` (`idtipoSangue`, `tipo`) VALUES (8, 'O-');

COMMIT;


-- -----------------------------------------------------
-- Data for table `ssmv`.`estados`
-- -----------------------------------------------------
START TRANSACTION;
USE `ssmv`;
INSERT INTO `ssmv`.`estados` (`idestado`, `sigla`, `nome`) VALUES (1, 'AC', 'Acre');
INSERT INTO `ssmv`.`estados` (`idestado`, `sigla`, `nome`) VALUES (2, 'AL', 'Alagoas');
INSERT INTO `ssmv`.`estados` (`idestado`, `sigla`, `nome`) VALUES (3, 'AM', 'Amazonas');
INSERT INTO `ssmv`.`estados` (`idestado`, `sigla`, `nome`) VALUES (4, 'AP', 'Amap&aacute;');
INSERT INTO `ssmv`.`estados` (`idestado`, `sigla`, `nome`) VALUES (5, 'BA', 'Bahia');
INSERT INTO `ssmv`.`estados` (`idestado`, `sigla`, `nome`) VALUES (6, 'CE', 'Cear&aacute;');
INSERT INTO `ssmv`.`estados` (`idestado`, `sigla`, `nome`) VALUES (7, 'DF', 'Distrito Federal');
INSERT INTO `ssmv`.`estados` (`idestado`, `sigla`, `nome`) VALUES (8, 'ES', 'Espir&iacute;to Santo');
INSERT INTO `ssmv`.`estados` (`idestado`, `sigla`, `nome`) VALUES (9, 'GO', 'Goi&aacute;s');
INSERT INTO `ssmv`.`estados` (`idestado`, `sigla`, `nome`) VALUES (10, 'MA', 'Maranh&atilde;o');
INSERT INTO `ssmv`.`estados` (`idestado`, `sigla`, `nome`) VALUES (11, 'MG', 'Minas Gerais');
INSERT INTO `ssmv`.`estados` (`idestado`, `sigla`, `nome`) VALUES (12, 'MS', 'Mato Grosso do Sul');
INSERT INTO `ssmv`.`estados` (`idestado`, `sigla`, `nome`) VALUES (13, 'MT', 'Mato Grosso');
INSERT INTO `ssmv`.`estados` (`idestado`, `sigla`, `nome`) VALUES (14, 'PA', 'Par&aacute;');
INSERT INTO `ssmv`.`estados` (`idestado`, `sigla`, `nome`) VALUES (15, 'PB', 'Para&iacute;ba');
INSERT INTO `ssmv`.`estados` (`idestado`, `sigla`, `nome`) VALUES (16, 'PE', 'Pernambuco');
INSERT INTO `ssmv`.`estados` (`idestado`, `sigla`, `nome`) VALUES (17, 'PI', 'Piau&iacute;');
INSERT INTO `ssmv`.`estados` (`idestado`, `sigla`, `nome`) VALUES (18, 'PR', 'Paran&aacute;');
INSERT INTO `ssmv`.`estados` (`idestado`, `sigla`, `nome`) VALUES (19, 'RJ', 'Rio de Janeiro');
INSERT INTO `ssmv`.`estados` (`idestado`, `sigla`, `nome`) VALUES (20, 'RN', 'Rio Grande do Norte');
INSERT INTO `ssmv`.`estados` (`idestado`, `sigla`, `nome`) VALUES (21, 'RO', 'Rond&ocirc;nia');
INSERT INTO `ssmv`.`estados` (`idestado`, `sigla`, `nome`) VALUES (22, 'RR', 'Roraima');
INSERT INTO `ssmv`.`estados` (`idestado`, `sigla`, `nome`) VALUES (23, 'RS', 'Rio Grande do Sul');
INSERT INTO `ssmv`.`estados` (`idestado`, `sigla`, `nome`) VALUES (24, 'SC', 'Santa Catarina');
INSERT INTO `ssmv`.`estados` (`idestado`, `sigla`, `nome`) VALUES (25, 'SE', 'Sergipe');
INSERT INTO `ssmv`.`estados` (`idestado`, `sigla`, `nome`) VALUES (26, 'SP', 'S&atilde;o Paulo');
INSERT INTO `ssmv`.`estados` (`idestado`, `sigla`, `nome`) VALUES (27, 'TO', 'Tocantins');

COMMIT;


-- -----------------------------------------------------
-- Data for table `ssmv`.`sangueDoador`
-- -----------------------------------------------------
START TRANSACTION;
USE `ssmv`;
INSERT INTO `ssmv`.`sangueDoador` (`idsangueDoador`, `idsangueCompativel`) VALUES (1, 1);
INSERT INTO `ssmv`.`sangueDoador` (`idsangueDoador`, `idsangueCompativel`) VALUES (1, 5);
INSERT INTO `ssmv`.`sangueDoador` (`idsangueDoador`, `idsangueCompativel`) VALUES (2, 1);
INSERT INTO `ssmv`.`sangueDoador` (`idsangueDoador`, `idsangueCompativel`) VALUES (2, 2);
INSERT INTO `ssmv`.`sangueDoador` (`idsangueDoador`, `idsangueCompativel`) VALUES (2, 5);
INSERT INTO `ssmv`.`sangueDoador` (`idsangueDoador`, `idsangueCompativel`) VALUES (2, 6);
INSERT INTO `ssmv`.`sangueDoador` (`idsangueDoador`, `idsangueCompativel`) VALUES (3, 3);
INSERT INTO `ssmv`.`sangueDoador` (`idsangueDoador`, `idsangueCompativel`) VALUES (3, 5);
INSERT INTO `ssmv`.`sangueDoador` (`idsangueDoador`, `idsangueCompativel`) VALUES (4, 3);
INSERT INTO `ssmv`.`sangueDoador` (`idsangueDoador`, `idsangueCompativel`) VALUES (4, 4);
INSERT INTO `ssmv`.`sangueDoador` (`idsangueDoador`, `idsangueCompativel`) VALUES (4, 5);
INSERT INTO `ssmv`.`sangueDoador` (`idsangueDoador`, `idsangueCompativel`) VALUES (4, 6);
INSERT INTO `ssmv`.`sangueDoador` (`idsangueDoador`, `idsangueCompativel`) VALUES (5, 5);
INSERT INTO `ssmv`.`sangueDoador` (`idsangueDoador`, `idsangueCompativel`) VALUES (6, 6);
INSERT INTO `ssmv`.`sangueDoador` (`idsangueDoador`, `idsangueCompativel`) VALUES (6, 6);
INSERT INTO `ssmv`.`sangueDoador` (`idsangueDoador`, `idsangueCompativel`) VALUES (7, 1);
INSERT INTO `ssmv`.`sangueDoador` (`idsangueDoador`, `idsangueCompativel`) VALUES (7, 3);
INSERT INTO `ssmv`.`sangueDoador` (`idsangueDoador`, `idsangueCompativel`) VALUES (7, 5);
INSERT INTO `ssmv`.`sangueDoador` (`idsangueDoador`, `idsangueCompativel`) VALUES (7, 7);
INSERT INTO `ssmv`.`sangueDoador` (`idsangueDoador`, `idsangueCompativel`) VALUES (8, 1);
INSERT INTO `ssmv`.`sangueDoador` (`idsangueDoador`, `idsangueCompativel`) VALUES (8, 2);
INSERT INTO `ssmv`.`sangueDoador` (`idsangueDoador`, `idsangueCompativel`) VALUES (8, 3);
INSERT INTO `ssmv`.`sangueDoador` (`idsangueDoador`, `idsangueCompativel`) VALUES (8, 4);
INSERT INTO `ssmv`.`sangueDoador` (`idsangueDoador`, `idsangueCompativel`) VALUES (8, 5);
INSERT INTO `ssmv`.`sangueDoador` (`idsangueDoador`, `idsangueCompativel`) VALUES (8, 6);
INSERT INTO `ssmv`.`sangueDoador` (`idsangueDoador`, `idsangueCompativel`) VALUES (8, 7);
INSERT INTO `ssmv`.`sangueDoador` (`idsangueDoador`, `idsangueCompativel`) VALUES (8, 8);

COMMIT;


-- -----------------------------------------------------
-- Data for table `ssmv`.`sangueRecebedor`
-- -----------------------------------------------------
START TRANSACTION;
USE `ssmv`;
INSERT INTO `ssmv`.`sangueRecebedor` (`idsangueRecebedor`, `idsangueCompativel`) VALUES (1, 1);
INSERT INTO `ssmv`.`sangueRecebedor` (`idsangueRecebedor`, `idsangueCompativel`) VALUES (1, 2);
INSERT INTO `ssmv`.`sangueRecebedor` (`idsangueRecebedor`, `idsangueCompativel`) VALUES (1, 7);
INSERT INTO `ssmv`.`sangueRecebedor` (`idsangueRecebedor`, `idsangueCompativel`) VALUES (1, 8);
INSERT INTO `ssmv`.`sangueRecebedor` (`idsangueRecebedor`, `idsangueCompativel`) VALUES (2, 2);
INSERT INTO `ssmv`.`sangueRecebedor` (`idsangueRecebedor`, `idsangueCompativel`) VALUES (2, 8);
INSERT INTO `ssmv`.`sangueRecebedor` (`idsangueRecebedor`, `idsangueCompativel`) VALUES (3, 3);
INSERT INTO `ssmv`.`sangueRecebedor` (`idsangueRecebedor`, `idsangueCompativel`) VALUES (3, 4);
INSERT INTO `ssmv`.`sangueRecebedor` (`idsangueRecebedor`, `idsangueCompativel`) VALUES (3, 7);
INSERT INTO `ssmv`.`sangueRecebedor` (`idsangueRecebedor`, `idsangueCompativel`) VALUES (3, 8);
INSERT INTO `ssmv`.`sangueRecebedor` (`idsangueRecebedor`, `idsangueCompativel`) VALUES (4, 4);
INSERT INTO `ssmv`.`sangueRecebedor` (`idsangueRecebedor`, `idsangueCompativel`) VALUES (4, 8);
INSERT INTO `ssmv`.`sangueRecebedor` (`idsangueRecebedor`, `idsangueCompativel`) VALUES (5, 1);
INSERT INTO `ssmv`.`sangueRecebedor` (`idsangueRecebedor`, `idsangueCompativel`) VALUES (5, 2);
INSERT INTO `ssmv`.`sangueRecebedor` (`idsangueRecebedor`, `idsangueCompativel`) VALUES (5, 3);
INSERT INTO `ssmv`.`sangueRecebedor` (`idsangueRecebedor`, `idsangueCompativel`) VALUES (5, 4);
INSERT INTO `ssmv`.`sangueRecebedor` (`idsangueRecebedor`, `idsangueCompativel`) VALUES (5, 5);
INSERT INTO `ssmv`.`sangueRecebedor` (`idsangueRecebedor`, `idsangueCompativel`) VALUES (5, 6);
INSERT INTO `ssmv`.`sangueRecebedor` (`idsangueRecebedor`, `idsangueCompativel`) VALUES (5, 7);
INSERT INTO `ssmv`.`sangueRecebedor` (`idsangueRecebedor`, `idsangueCompativel`) VALUES (5, 8);
INSERT INTO `ssmv`.`sangueRecebedor` (`idsangueRecebedor`, `idsangueCompativel`) VALUES (6, 2);
INSERT INTO `ssmv`.`sangueRecebedor` (`idsangueRecebedor`, `idsangueCompativel`) VALUES (6, 4);
INSERT INTO `ssmv`.`sangueRecebedor` (`idsangueRecebedor`, `idsangueCompativel`) VALUES (6, 6);
INSERT INTO `ssmv`.`sangueRecebedor` (`idsangueRecebedor`, `idsangueCompativel`) VALUES (6, 8);
INSERT INTO `ssmv`.`sangueRecebedor` (`idsangueRecebedor`, `idsangueCompativel`) VALUES (7, 7);
INSERT INTO `ssmv`.`sangueRecebedor` (`idsangueRecebedor`, `idsangueCompativel`) VALUES (7, 8);
INSERT INTO `ssmv`.`sangueRecebedor` (`idsangueRecebedor`, `idsangueCompativel`) VALUES (8, 8);

COMMIT;

